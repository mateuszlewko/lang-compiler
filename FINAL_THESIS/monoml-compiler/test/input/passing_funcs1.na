module Prelude =
  external ll_putint : int -> ()
  external ll_print_line : () -> ()

  let ln () = ll_print_line ()

  let printi x = 
    ll_putint x

  let printin x = 
    ll_putint x
    ln () 

open Prelude

let fn1 () () x = x + x

(* Note: type annotation is not required *)
let wrapper (fn : () -> () -> int -> int) x =
  fn () () x

let wrapper2 fn x =
  let fn1 () y = fn () () y
  let fn2 x = fn1 () x 

  (fn2 10) + (fn1 () 2)

let _ =

  printin (wrapper fn1 4)
  printin (wrapper2 fn1 4)