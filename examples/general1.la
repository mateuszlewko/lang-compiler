external ll_putint : int -> ()
external ll_print_line : () -> ()
external ll_get_ith_elem_of_int_array : int array -> int -> int
external ll_set_ith_elem_of_int_array : int array -> int -> int -> ()
external ll_new_int_array : int -> int array

module A =
    external ll_putint : int -> ()
    external ll_print_line : () -> ()

    let aaaaaa : () =
      ll_putint (1)
      ll_print_line ()

    let testA x = x * 2

    module B =
      let testB x y =
        x + y

module D =
    module E =
      let adder x y = x + y

    let testD x =
      E.adder 21 x

let apply (fn : int -> int) arg =
  fn arg

let mult2 x =
  x * 2

let rec power a n =
  if n = 0
  then 1
  else a * (power a (n - 1))

let fib n =
  let rec aux n a b =
    if n = 0
    then b
    else (aux (n-1) b (a+b))

  aux n 0 1

let app2 (fn : int -> int -> int) arg1 arg2 =
  fn arg1 arg2

module G =
  let testG a b =
    a + b

open G

let arr : int array =
  [| 3; 5; 10111 |]

let topval6 = 77

let topval7 = topval6 + 3

let topval8 x =
  topval7 + 7 + x


let topval = 4

(* let topval_fun : int -> int = mult2 *)

(* let topval2 =
  let top_inner_adder a b =
    a + b + 10

  ll_putint(top_inner_adder 1 3)
  ll_print_line ()
  G.testG 10 14 *)

let retfun : int -> int = mult2

let get_ith (arr : int array) ix =
  ll_get_ith_elem_of_int_array arr ix

let set_ith (arr : int array) ix val : () =
  ll_set_ith_elem_of_int_array arr ix val

let new size : int array =
  ll_new_int_array size

let my_arr : int array = (new 100)
let fn11 = 5

let rec add_one x n =
  if n = 0
  then x
  else (add_one (1 + x) (n - 1))

let fn111112 x : int =
  let xxx : int =
    ll_putint 11111111
    ll_print_line ()

    let yyy : int =
      ll_putint 333333
      ll_print_line ()
      3

    0

  ll_putint 222222
  ll_print_line ()
  5

let addtwo x =
  1110 - (x - 10) + 10 +20

let main () : int =

  if fn111112 0 = 6
  then 
    ll_putint 919
    ll_putint 919
    3
  elif fn111112 0 = 5
  then 
    ll_putint 920
    ll_putint 921
    let xel : () = ll_putint 6
    3


  fn111112 1
  fn111112 2

  ll_print_line ()

  ll_putint (addtwo 7)
  ll_print_line ()

  ll_putint (add_one 0 100000000)
  ll_print_line ()

  set_ith my_arr 78 108
  ll_putint (get_ith my_arr 78)
  ll_print_line ()

  ll_putint (get_ith my_arr 79)
  ll_print_line ()

  ll_putint (get_ith arr 2)
  ll_print_line ()

  set_ith arr 2 999

  ll_putint (get_ith arr 2)
  ll_print_line ()

  ll_putint((retfun) 109)
  ll_print_line ()

  ll_putint(topval7)
  ll_print_line ()

  ll_putint(topval8 7)
  ll_print_line ()

  ll_putint(testG 2 3)
  ll_print_line ()

  ll_putint(A.testA 101)
  ll_print_line ()

  ll_putint(D.testD 35)
  ll_print_line ()

  ll_putint(fib 35)
  ll_print_line ()

  ll_putint (apply mult2 6)
  ll_print_line ()

  ll_putint(power 3 4)
  ll_print_line ()

  ll_putint(app2 power 2 10)
  ll_print_line ()

  ll_putint 104
  ll_print_line ()
  0