module Prelude = 
    external ll_putint     : int -> () 
    external ll_print_line : ()  -> () 

    let print_int (x : int) : () = ll_putint x
    let print_nl : () -> () = ll_print_line
    let printn_int x = 
        print_int x 
        print_nl () 

open Prelude

let rec fact x = 
    if x = 0 
    then 1 
    else x * fact (x - 1)

let rec fix f n = f (fix f) n

let fact_nr self n = 
    if n = 0 
    then 1 
    else n * (self (n - 1))

let fact_fix n = fix fact_nr n

let _ : () = 
    printn_int (fact_fix 5)
    printn_int (fact 5)