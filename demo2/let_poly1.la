module Prelude = 
    external ll_putint     : int -> () 
    external ll_print_line : ()  -> () 

    let print_int : int -> () = ll_putint
    let print_nl : () -> () = ll_print_line
    let printn_int x = 
        print_int x 
        print_nl () 

open Prelude

let rec fact x = 
    if x = 0 
    then 1 
    else x + fact (-1 + x)

let rec fix f n = f (fix f) n

let fact_nr self n = 
    if n = 0 
    then 1 
    else n + (self (-1 + n))

let fact_fix (n : int) : int = fix fact_nr n

let _ : () = 
    printn_int (fact_fix 5)
    printn_int (fact 5)